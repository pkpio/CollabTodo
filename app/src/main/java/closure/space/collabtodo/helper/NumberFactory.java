package closure.space.collabtodo.helper;

import java.util.Random;

import closure.space.collabtodo.main.ApplicationClass;

/**
 * To get numbers that satisfy a particular criteria
 * <p/>
 * Created by praveen on 8/5/15.
 */
public class NumberFactory {

    /**
     * Get a psuedo-random non-negative integer
     *
     * @return int
     */
    public static int random() {
        return random(0, Integer.MAX_VALUE - 1);
    }

    /**
     * Returns a psuedo-random number between min and max, inclusive.
     * The difference between min and max can be at most
     * <code>Integer.MAX_VALUE - 1</code>.
     *
     * @param min Minimim value
     * @param max Maximim value.  Must be greater than min.
     * @return Integer between min and max, inclusive
     */
    public static int random(int min, int max) {

        // Usually this can be a field rather than a method variable
        Random rand = new Random();

        // nextInt is normally exclusive of the top value,
        // so add 1 to make it inclusive
        int randomNum = rand.nextInt((max - min) + 1) + min;

        return randomNum;
    }

    /**
     * Returns a number which is unique compared to any number previously generated by this method.
     *
     * @return
     */
    public static long uniqueLocal() {
        return System.currentTimeMillis();
    }

    /**
     * Returns a unique string that is specific to this device. This will remain unchanged in any
     * future calls
     */
    public static String uniqueDeviceId() {
        return ApplicationClass.getUUID();
    }

}
